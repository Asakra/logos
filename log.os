//////////////////////////////////////////////////////////////////////////
//
// LOGOS: реализация логирования в стиле log4j для OneScript
//
//////////////////////////////////////////////////////////////////////////

Перем мУровниПриоритета;
Перем мНаименованиеУровней;
Перем мТекущийУровень;
Перем мСпособыВывода;
Перем мСпособВыводаЗаданВручную;

Функция Уровни() Экспорт
	Возврат мУровниПриоритета;
КонецФункции

Функция Уровень() Экспорт
	Возврат мТекущийУровень;
КонецФункции

Процедура УстановитьУровень(Знач Уровень) Экспорт
	Если Уровень < 0 или Уровень > Уровни().Отключить Тогда
		ВызватьИсключение "Неверное значение аргумента 'Уровень'";
	КонецЕсли;
	
	мТекущийУровень = Уровень;
	
КонецПроцедуры

Процедура Закрыть() Экспорт
	Для Каждого СпособВывода Из мСпособыВывода Цикл
		СпособВывода.Закрыть();
	КонецЦикла;
	мСпособыВывода.Очистить();
КонецПроцедуры

Процедура ДобавитьСпособВывода(Знач СпособВывода) Экспорт

	Если Не мСпособВыводаЗаданВручную Тогда
		мСпособыВывода.Очистить();
		мСпособВыводаЗаданВручную = Истина;
	КонецЕсли;
	
	мСпособыВывода.Добавить(СпособВывода);

КонецПроцедуры

Процедура Отладка(Знач Сообщение) Экспорт
	Вывести(Сообщение, Уровни().Отладка);
КонецПроцедуры

Процедура Информация(Знач Сообщение) Экспорт
	Вывести(Сообщение, Уровни().Информация);
КонецПроцедуры

Процедура Предупреждение(Знач Сообщение) Экспорт
	Вывести(Сообщение, Уровни().Предупреждение);
КонецПроцедуры

Процедура Ошибка(Знач Сообщение) Экспорт
	Вывести(Сообщение, Уровни().Ошибка);
КонецПроцедуры

Процедура КритичнаяОшибка(Знач Сообщение) Экспорт
	Вывести(Сообщение, Уровни().КритичнаяОшибка);
КонецПроцедуры

Процедура Вывести(Знач Сообщение, Знач УровеньСообщения)
	
	Если УровеньСообщения >= Уровень() Тогда
		Для Каждого СпособВывода Из мСпособыВывода Цикл
			СпособВывода.Вывести(мНаименованиеУровней[УровеньСообщения] + " - " + Сообщение);
		КонецЦикла;
	КонецЕсли
	
КонецПроцедуры

Процедура Инициализация()
	
	ИнициализироватьУровни();
	ИнициализироватьНаименованияУровней();
	ИнициализироватьСпособыВывода();
	
КонецПроцедуры

Процедура ИнициализироватьУровни()
	
	мУровниПриоритета = Новый Структура;
	мУровниПриоритета.Вставить("Отладка"        , 0);
	мУровниПриоритета.Вставить("Информация"     , 1);
	мУровниПриоритета.Вставить("Предупреждение" , 2);
	мУровниПриоритета.Вставить("Ошибка"         , 3);
	мУровниПриоритета.Вставить("КритичнаяОшибка", 4);
	мУровниПриоритета.Вставить("Отключить"      , 5);
	
	мТекущийУровень = мУровниПриоритета.Информация;
	
КонецПроцедуры

Процедура ИнициализироватьНаименованияУровней()
	
	мНаименованиеУровней = Новый Соответствие;
	мНаименованиеУровней.Вставить(мУровниПриоритета.Отладка        , "ОТЛАДКА");
	мНаименованиеУровней.Вставить(мУровниПриоритета.Информация     , "ИНФОРМАЦИЯ");
	мНаименованиеУровней.Вставить(мУровниПриоритета.Предупреждение , "ПРЕДУПРЕЖДЕНИЕ");
	мНаименованиеУровней.Вставить(мУровниПриоритета.Ошибка         , "ОШИБКА");
	мНаименованиеУровней.Вставить(мУровниПриоритета.КритичнаяОшибка, "КРИТИЧНАЯОШИБКА");
	мНаименованиеУровней.Вставить(мУровниПриоритета.Отключить      , "ОТКЛЮЧИТЬ");

КонецПроцедуры

Процедура ИнициализироватьСпособыВывода()
	
	Каталог = Новый Файл(ТекущийСценарий().Источник).Путь;
	
	ПодключитьСценарий(Каталог + "file-appender.os", "ВыводЛогаВФайл");
	ПодключитьСценарий(Каталог + "console-appender.os", "ВыводЛогаВКонсоль");
	
	мСпособВыводаЗаданВручную = Ложь;
	мСпособыВывода = Новый Массив;
	
	ВыводПоУмолчанию = Новый ВыводЛогаВКонсоль();
	мСпособыВывода.Добавить(ВыводПоУмолчанию);
	
КонецПроцедуры

Инициализация();