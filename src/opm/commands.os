
Процедура ДобавитьОписанияКоманд(Знач Парсер) Экспорт
	ДобавитьКомандуBuild(Парсер);
	ДобавитьКомандуPrepare(Парсер);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Описания команд

Процедура ДобавитьКомандуPrepare(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("prepare");
	Парсер.ДобавитьПозиционныйПараметр(Команда, "ИмяПакета");
	Парсер.ДобавитьИменованныйПараметр(Команда, "dir");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

Процедура ДобавитьКомандуBuild(Знач Парсер)
	Команда = Парсер.ОписаниеКоманды("build");
	Парсер.ДобавитьПозиционныйПараметр(Команда, "КаталогИсходников");
	Парсер.ДобавитьПозиционныйПараметр(Команда, "ФайлМанифеста");
	Парсер.ДобавитьКоманду(Команда);
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// Реализация команд

Процедура ВыполнитьСборку(Знач КаталогИсходников, Знач ФайлМанифеста)
	
	Сборщик = ЗагрузитьСценарий(ОбъединитьПути(КаталогСкрипта(), "builder.os"));
	Сборщик.СобратьПакет(КаталогИсходников, ФайлМанифеста);
	
КонецПроцедуры

Процедура ПодготовитьКаталогПроекта(Знач ИмяПакета, Знач ВыходнойКаталог)
	
	Если ВыходнойКаталог = Неопределено Тогда
		ВыходнойКаталог = ТекущийКаталог();
	КонецЕсли;
	
	РабочийКаталог = Новый Файл(ОбъединитьПути(ВыходнойКаталог, ИмяПакета));
	Если Не РабочийКаталог.Существует() Тогда
		СоздатьКаталог(РабочийКаталог.ПолноеИмя);
	Иначе
		Содержимое = НайтиФайлы(РабочийКаталог.ПолноеИмя, ПолучитьМаскуВсеФайлы());
		Если Содержимое.Количество() Тогда
			ВызватьИсключение "Каталог проекта " + РабочийКаталог.ПолноеИмя + " уже существует";
		КонецЕсли;
	КонецЕсли;
	
	ЗаписатьЗаготовкуСкриптаУстановки(РабочийКаталог.ПолноеИмя);
	ЗаписатьЗаготовкуМанифестаБиблиотеки(РабочийКаталог.ПолноеИмя, ИмяПакета);

	Сообщить("Готово");
	
КонецПроцедуры

Процедура ЗаписатьЗаготовкуСкриптаУстановки(Знач Каталог)

	ИмяФайла = ОбъединитьПути(Каталог, "__install__.os");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяФайла);
	ЗаписьТекста.ЗаписатьСтроку("///////////////////////////////////////////////////////////////////");
	ЗаписьТекста.ЗаписатьСтроку("// Сценарий установки и удаления пакета с клиентской машины        ");
	ЗаписьТекста.ЗаписатьСтроку("///////////////////////////////////////////////////////////////////
	|
	|");
	
	ЗаписьТекста.ЗаписатьСтроку("// Вызывается пакетным менеджером при установке пакета на клиентскую машину.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("// Параметры:");
	ЗаписьТекста.ЗаписатьСтроку("//   КаталогУстановкиПакета - строка. Путь в который пакетный менеджер устанавливает текущий пакет.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("Процедура ПриУстановке(Знач КаталогУстановкиПакета) Экспорт");
	ЗаписьТекста.ЗаписатьСтроку("	// TODO: Реализуйте спец. логику установки, если требуется");
	ЗаписьТекста.ЗаписатьСтроку("КонецПроцедуры");
	ЗаписьТекста.ЗаписатьСтроку(Символы.ПС);
	
	ЗаписьТекста.ЗаписатьСтроку("// Вызывается пакетным менеджером при удалении пакета с клиентской машины.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("// Параметры:");
	ЗаписьТекста.ЗаписатьСтроку("//   КаталогУстановкиПакета - строка. Каталог в который установлен пакет.");
	ЗаписьТекста.ЗаписатьСтроку("// ");
	ЗаписьТекста.ЗаписатьСтроку("Процедура ПриУдалении(Знач КаталогУстановкиПакета) Экспорт");
	ЗаписьТекста.ЗаписатьСтроку("	// TODO: Реализуйте спец. логику удаления, если требуется");
	ЗаписьТекста.ЗаписатьСтроку("КонецПроцедуры");
	
	ЗаписьТекста.Закрыть();

КонецПроцедуры

Процедура ЗаписатьЗаготовкуМанифестаБиблиотеки(Знач Каталог, Знач ИмяПакета)
	ИмяФайла = ОбъединитьПути(Каталог, "lib.config");
	
	Запись = Новый ЗаписьXML;
	Запись.ОткрытьФайл(ИмяФайла);
	Запись.ЗаписатьОбъявлениеXML();
	Запись.ЗаписатьНачалоЭлемента("package-def");
	Запись.ЗаписатьСоответствиеПространстваИмен("", "http://oscript.io/schemas/package-def/1.0");
	Запись.ЗаписатьАтрибут("name", ИмяПакета);
	Запись.ЗаписатьАтрибут("version", "0.1");
	
	Запись.ЗаписатьНачалоЭлемента("class");
	Запись.ЗаписатьАтрибут("name", "ИмяКлассаВЯзыке");
	Запись.ЗаписатьАтрибут("file", "ПутьКФайлуРеализации.os");
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьНачалоЭлемента("module");
	Запись.ЗаписатьАтрибут("name", "ИмяобщегоМодуля");
	Запись.ЗаписатьАтрибут("file", "ПутьКФайлуРеализации.os");
	Запись.ЗаписатьКонецЭлемента();
	
	Запись.ЗаписатьКонецЭлемента();
	Запись.Закрыть();
	
КонецПроцедуры

Процедура УстановитьПакет(Знач ИмяПакета)
	
	Если Прав(НРег(ИмяПакета), 4) = ".ospx" Тогда
	
	КонецЕсли;
	
КонецПроцедуры